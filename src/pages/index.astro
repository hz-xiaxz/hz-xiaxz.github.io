---
import { getCollection } from "astro:content";

import BaseHead from "$components/BaseHead.astro";
import Header from "$components/Header.astro";
import Footer from "$components/Footer.astro";
import FormattedDate from "$components/FormattedDate.astro";
import { renderComment } from "$components/CommentBody";

import {
  kSiteTitle,
  kSiteIndexTitle,
  kSiteDescription,
  kCommentList,
  kUrlBase,
} from "$consts";
// @ts-ignore
import AboutContent from "../../content/other/about.typ?html&body";

import "$styles/IndexPostList.css";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);
const comments = kCommentList.sort(
  (a, b) => b.createdAt.valueOf() - a.createdAt.valueOf()
);

const recent5Posts = posts.slice(0, 5);
const recent5Comments = comments.slice(0, 5);
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={kSiteTitle} description={kSiteDescription} />
    <style>
      .comments a {
        display: inline-block;
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <h1>{kSiteIndexTitle}</h1>
      <AboutContent />
      <h2>Recent Posts</h2>
      <ul class="posts">
        {
          recent5Posts.map((post) => (
            <li>
              <a class="heading" href={`${kUrlBase}/article/${post.id}/`}>
                <h4>
                  <span class="title">{post.data.title}</span>
                </h4>
                <span class="date">
                  <FormattedDate date={post.data.date} />
                </span>
              </a>
              {post.data.desc || ""}
            </li>
          ))
        }
      </ul>
      <h2>Recent Comments</h2>
      <ul class="comments">
        {
          recent5Comments.map((comment) => (
            <li>
              <h4>
                <span class="name">{comment.email}</span> commented on
                <a
                  class="heading"
                  href={`${kUrlBase}/article/${comment.articleId}`}
                >
                  {
                    posts.find((post) => post.id === comment.articleId)?.data
                      .title
                  }
                </a>
                at
                <span class="date">
                  <time>{new Date(comment.createdAt).toLocaleString()}</time>
                </span>
              </h4>
              <span class="title" set:html={renderComment(comment.content)} />
            </li>
          ))
        }
      </ul>
    </main>
    <Footer />
  </body>
</html>
